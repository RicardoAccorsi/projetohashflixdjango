"""
Django settings for hashflix project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # definir onde está o projeto


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
TOKEN_CSRF = os.getenv("TOKEN_CSRF")
if TOKEN_CSRF:
    SECRET_KEY = TOKEN_CSRF
    CSRF_TRUSTED_ORIGINS = ["linkdoapp"]  # sem barra no final
else:
    SECRET_KEY = "django-insecure-zrx@9=627a_o%6saxkle#q1n33va@y08p-x@2r#k)gkt0obvoe"  # chave de segurança do projeto

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # alterações no site feitas no mesmo instante

ALLOWED_HOSTS = ["localhost", "127.0.0.1"]  # add "link do app sem https://"


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "filme",
    "crispy_forms",
    "crispy_bootstrap5",
]  # apps instalados

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]  # processos de meio caminho que o django já cuida

ROOT_URLCONF = "hashflix.urls"  # qual é o arquivo onde existem as urls que comandam o site

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "filme.context.lista_filmes_recentes",
                "filme.context.lista_filmes_emalta",
            ],
        },
    },
]  # onde vão ficar os arquivos html e options tem a ver com criar contextos dentro do projeto

WSGI_APPLICATION = "hashflix.wsgi.application"  # configuração de servidor


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}  # banco de dados utilizado no projeto

import dj_database_url

DATABASE_URL = os.getenv("DATABASE_URL")
if DATABASE_URL:
    DATABASES = {
        "default": dj_database_url.config(default=DATABASE_URL, conn_max_age=1800)
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = "filme.Usuario"  # estabelecer usuario criado em models como o padrao (nome_app.classe_usuario)
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]  # validadores de senha que o django realizará


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "pt-br"  # lingua do adm

TIME_ZONE = "America/Sao_Paulo"  # fuso-horário do adm

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)  # static são imagens que o criador do site bota na construção do site, mídia são as imagens que o usuário faz o upload
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"  # onde ficarão os arquivos edição do front-end

STATIC_ROOT = BASE_DIR / "staticfiles"

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# pagina onde as imagens de upload dos usuarios vao ficar
MEDIA_URL = "media/"

MEDIA_ROOT = BASE_DIR / "media"




# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"  # definir chave primária das tabelas do banco de dados

# link para o qual o usuario é redirecionado ao fazer o login
LOGIN_REDIRECT_URL = "filme:homefilmes"

# link onde o usuario faz o login
LOGIN_URL = "filme:login"  # urls, como no html se passam com ':'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"